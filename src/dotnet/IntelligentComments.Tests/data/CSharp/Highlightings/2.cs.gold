namespace ReSharperPlugin.IntelligentComments.Tests.data.CSharp.Highlightings;

|/// <summary>
/// A summary about this class.
/// </summary>
/// <remarks>
/// These remarks would explain more about this class.
/// In this example, these comments also explain the 
/// general information about the derived class.
/// </remarks>|(0)
public class MainClass
{
}

|///<inheritdoc/>|(1)
public class DerivedClass : MainClass
{
}

|/// <summary>
/// This interface would describe all the methods in
/// its contract.
/// </summary>
/// <remarks>
/// While elided for brevity, each method or property
/// in this interface would contain docs that you want
/// to duplicate in each implementing class. 
/// </remarks>|(2)
public interface ITestInterface
{
    |/// <summary>
    /// This method is part of the test interface.
    /// </summary>
    /// <remarks>
    /// This content would be inherited by classes 
    /// that implement this interface when the 
    /// implementing class uses "inheritdoc"
    /// </remarks>
    /// <returns>The value of <paramref name="arg" /> </returns>
    /// <param name="arg">The argument to the method</param>|(3)
    int Method(int arg);
}

|///<inheritdoc cref="ITestInterface"/>|(4)
public class ImplementingClass : ITestInterface
{
    |// doc comments are inherited here.|(5)
    public int Method(int arg) => arg;
}

|/// <summary>
/// This class shows hows you can "inherit" the doc
/// comments from one method in another method.
/// </summary>
/// <remarks>
/// You can inherit all comments, or only a specific tag,
/// represented by an xpath expression.
/// </remarks>|(6)
public class InheritOnlyReturns
{
    |/// <summary>
    /// In this example, this summary is only visible for this method.
    /// </summary>
    /// <returns>A boolean</returns>|(7)
    public static bool MyParentMethod(bool x) { return x; }

    |/// <inheritdoc cref="MyParentMethod" path="/returns"/>|(8)
    public static bool MyChildMethod() { return false; }
}

|/// <Summary>
/// This class shows an example ofsharing comments across methods.
/// </Summary>|(9)
public class InheritAllButRemarks
{
    |/// <summary>
    /// In this example, this summary is visible on all the methods.
    /// </summary>
    /// <remarks>
    /// The remarks can be inherited by other methods
    /// using the xpath expression.
    /// </remarks>
    /// <returns>A boolean</returns>|(10)
    public static bool MyParentMethod(bool x) { return x; }

    |/// <inheritdoc cref="MyParentMethod" path="//*[not(self::remarks)]"/>|(11)
    public static bool MyChildMethod() { return false; }
}
---------------------------------------------------------
(0): IntelligentCommentsDocCommentFolding: (DocumentRange (82 - 336) on 2.cs)
IntelligentCommentContent:
  ContentSegments:
      SummaryContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: A summary about this class.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 27, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      RemarksContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: These remarks would explain more about this class.
              In this example, these comments also explain the
              general information about the derived class.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 144, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

(1): IntelligentCommentsDocCommentFolding: (DocumentRange (370 - 386) on 2.cs)
IntelligentCommentContent:
  ContentSegments:

(2): IntelligentCommentsDocCommentFolding: (DocumentRange (435 - 726) on 2.cs)
IntelligentCommentContent:
  ContentSegments:
      SummaryContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: This interface would describe all the methods in
              its contract.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 62, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      RemarksContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: While elided for brevity, each method or property
              in this interface would contain docs that you want
              to duplicate in each implementing class.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 141, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

(3): IntelligentCommentsDocCommentFolding: (DocumentRange (768 - 1,168) on 2.cs)
IntelligentCommentContent:
  ContentSegments:
      SummaryContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: This method is part of the test interface.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 42, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      RemarksContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: This content would be inherited by classes
              that implement this interface when the
              implementing class uses "inheritdoc"
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 118, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      ReturnContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: The value of arg
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 12, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
              Highlighter: [ReSharper.CSHARP_PARAMETER_IDENTIFIER, 13, 16, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      ParamContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: The argument to the method
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 26, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

(4): IntelligentCommentsDocCommentFolding: (DocumentRange (1,201 - 1,239) on 2.cs)
IntelligentCommentContent:
  ContentSegments:
      SummaryContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: This interface would describe all the methods in
              its contract.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 62, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      RemarksContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: While elided for brevity, each method or property
              in this interface would contain docs that you want
              to duplicate in each implementing class.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 141, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

(5): IntelligentCommentsDocCommentFolding: (DocumentRange (1,297 - 1,332) on 2.cs)
TextContentSegment:
  HighlightedText:
  Text: doc comments are inherited here.
  Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 32, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

(6): IntelligentCommentsDocCommentFolding: (DocumentRange (1,379 - 1,641) on 2.cs)
IntelligentCommentContent:
  ContentSegments:
      SummaryContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: This class shows hows you can "inherit" the doc
              comments from one method in another method.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 91, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      RemarksContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: You can inherit all comments, or only a specific tag,
              represented by an xpath expression.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 89, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

(7): IntelligentCommentsDocCommentFolding: (DocumentRange (1,683 - 1,826) on 2.cs)
IntelligentCommentContent:
  ContentSegments:
      SummaryContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: In this example, this summary is only visible for this method.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 62, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      ReturnContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: A boolean
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 9, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

(8): IntelligentCommentsDocCommentFolding: (DocumentRange (1,895 - 1,950) on 2.cs)
IntelligentCommentContent:
  ContentSegments:
      SummaryContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: In this example, this summary is only visible for this method.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 62, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      ReturnContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: A boolean
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 9, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

(9): IntelligentCommentsDocCommentFolding: (DocumentRange (2,015 - 2,112) on 2.cs)
IntelligentCommentContent:
  ContentSegments:
      SummaryContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: This class shows an example ofsharing comments across methods.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 62, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

(10): IntelligentCommentsDocCommentFolding: (DocumentRange (2,156 - 2,428) on 2.cs)
IntelligentCommentContent:
  ContentSegments:
      SummaryContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: In this example, this summary is visible on all the methods.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 60, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      RemarksContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: The remarks can be inherited by other methods
              using the xpath expression.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 73, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      ReturnContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: A boolean
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 9, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

(11): IntelligentCommentsDocCommentFolding: (DocumentRange (2,497 - 2,567) on 2.cs)
IntelligentCommentContent:
  ContentSegments:
      SummaryContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: In this example, this summary is visible on all the methods.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 60, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      RemarksContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: The remarks can be inherited by other methods
              using the xpath expression.
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 73, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]
      ReturnContentSegment:
        ContentSegments:
          TextContentSegment:
            HighlightedText:
            Text: A boolean
            Highlighters: Highlighter: [ReSharper.CSHARP_DOC_COMMENT, 0, 9, TextHighlighterAttributes { FontStyle = Regular, Underline = False, FontWeight = 400 }, References: ]

